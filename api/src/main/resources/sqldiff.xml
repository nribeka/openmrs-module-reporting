<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		USE:
			The diffs are ordered by datamodel version number.
			The script can be run in a top down fashion and is
			expected to not failor overwrite old data
		
		EXPECT:
			- "use business-database-name;" was called prior to
			   calling this script
	</help>
	
	<diff>
		<version>0.1.0</version>
		<author>Michael Seaton</author>
		<date>September 1st 2009</date>
		<description>
			Create table to persist report design specifications
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS `reporting_report_design` (
			  `id` int(11) NOT NULL auto_increment,
			  `uuid` char(38) NOT NULL,
			  `name` varchar(255) NOT NULL,
			  `description` varchar(1000),
			  `report_definition_id` int(11) NOT NULL default '0',
			  `renderer_type` varchar(255) NOT NULL,
			  `properties` text default NULL,
			  `creator` int(11) NOT NULL default '0',
			  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `retired_by` int(11) default NULL,
  			  `date_retired` datetime default NULL,
  			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `report_definition_id for reporting_report_design` (`report_definition_id`),
			  KEY `creator for reporting_report_design` (`creator`),
			  KEY `changed_by for reporting_report_design` (`changed_by`),
			  KEY `retired_by for reporting_report_design` (`retired_by`),
			  CONSTRAINT `report_definition_id for reporting_report_design` FOREIGN KEY (`report_definition_id`) REFERENCES `serialized_object` (`serialized_object_id`),
			  CONSTRAINT `creator for reporting_report_design` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `changed_by for reporting_report_design` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `retired_by for reporting_report_design` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
			
			CREATE TABLE IF NOT EXISTS `reporting_report_design_resource` (
			  `id` int(11) NOT NULL auto_increment,
			  `uuid` char(38) NOT NULL,
			  `name` varchar(255) NOT NULL,
			  `description` varchar(1000),
			  `report_design_id` int(11) NOT NULL default '0',
			  `content_type` varchar(50),
			  `extension` varchar(20),
			  `contents` longblob default NULL,
			  `creator` int(11) NOT NULL default '0',
			  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `retired_by` int(11) default NULL,
  			  `date_retired` datetime default NULL,
  			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `report_design_id for reporting_report_design_resource` (`report_design_id`),
			  KEY `creator for reporting_report_design_resource` (`creator`),
			  KEY `changed_by for reporting_report_design_resource` (`changed_by`),
			  KEY `retired_by for reporting_report_design_resource` (`retired_by`),
			  CONSTRAINT `report_design_id for reporting_report_design_resource` FOREIGN KEY (`report_design_id`) REFERENCES `reporting_report_design` (`id`),
			  CONSTRAINT `creator for reporting_report_design_resource` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `changed_by for reporting_report_design_resource` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `retired_by for reporting_report_design_resource` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;		
		</sql>
	</diff>
	
	<diff>
		<version>0.2.0</version>
		<author>Michael Seaton</author>
		<date>May 12th 2011</date>
		<description>
			Create tables to persist a report request and save reports
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS `reporting_report_request` (
			  `id` int(11) NOT NULL auto_increment,
			  `uuid` char(38) NOT NULL,
			  `base_cohort_uuid` char(38),
			  `base_cohort_parameters` text,
			  `report_definition_uuid` char(38) NOT NULL,
			  `report_definition_parameters` text,
			  `renderer_type` varchar(255) NOT NULL,
			  `renderer_argument` varchar(255),
			  `requested_by` int(11) NOT NULL default '0',
			  `request_datetime` datetime NOT NULL default '0000-00-00 00:00:00',
			  `priority` varchar(255) NOT NULL,
			  `status` varchar(255) NOT NULL,
			  `evaluation_start_datetime` datetime,
			  `evaluation_complete_datetime` datetime,
			  `render_complete_datetime` datetime,
			  `description` varchar(1000),
			  PRIMARY KEY  (`id`),
			  KEY `requested_by for reporting_report_request` (`requested_by`),
			  CONSTRAINT `requested_by for reporting_report_request` FOREIGN KEY (`requested_by`) REFERENCES `users` (`user_id`)
			) 
			ENGINE=InnoDB DEFAULT CHARSET=utf8;
		</sql>
	</diff>	
	
	<diff>
		<version>0.3.0</version>
		<author>Michael Seaton</author>
		<date>Dec 9th 2011</date>
		<description>
			Create tables to persist report processors
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS `reporting_report_processor` (
			  `id` int(11) NOT NULL auto_increment,
			  `uuid` char(38) NOT NULL,
			  `name` varchar(255) NOT NULL,
			  `description` varchar(1000),
			  `processor_type` varchar(255) NOT NULL,
			  `configuration` mediumtext,
			  `run_on_success` tinyint(1) NOT NULL default '1',
			  `run_on_error` tinyint(1) NOT NULL default '0',
			  `creator` int(11) NOT NULL default '0',
			  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `retired_by` int(11) default NULL,
  			  `date_retired` datetime default NULL,
  			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `creator for reporting_report_processor` (`creator`),
			  KEY `changed_by for reporting_report_processor` (`changed_by`),
			  KEY `retired_by for reporting_report_processor` (`retired_by`),
			  CONSTRAINT `creator for reporting_report_processor` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `changed_by for reporting_report_processor` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `retired_by for reporting_report_processor` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`)
			) 
			ENGINE=InnoDB DEFAULT CHARSET=utf8;
			
			CREATE TABLE IF NOT EXISTS `reporting_report_request_processor` (
			  `id` int(11) NOT NULL auto_increment,
			  `report_request_id` int(11) default NULL,
			  `report_processor_configuration_id` int(11) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `report_request_id for reporting_report_request_processor` (`report_request_id`),
			  KEY `report_processor_configuration_id for reporting_report_processor` (`report_processor_configuration_id`),
			  CONSTRAINT `report_request_id for reporting_report_processor` FOREIGN KEY (`report_request_id`) REFERENCES `reporting_report_request` (`id`),
			  CONSTRAINT `report_processor_configuration_id for reporting_report_processor` FOREIGN KEY (`report_processor_configuration_id`) REFERENCES `reporting_report_processor` (`id`)
			) 
			ENGINE=InnoDB DEFAULT CHARSET=utf8;
		</sql>
	</diff>	
	
	<diff>
		<version>0.4.0</version>
		<author>Michael Seaton</author>
		<date>Dec 22nd 2011</date>
		<description>
			Add a schedule property to ReportRequest
		</description>
		<sql>
			ALTER TABLE `reporting_report_request` ADD `schedule` varchar(100);
		</sql>
	</diff>	
	
	<diff>
		<version>0.4.1</version>
		<author>Michael Seaton</author>
		<date>Jan 11nd 2011</date>
		<description>
			Remove OpenMRS scheduled tasks produced by the reporting module
		</description>
		<sql>
			delete 	from `scheduler_task_config_property` 
			where 	task_config_id in (select task_config_id from scheduler_task_config where schedulable_class like 'org.openmrs.module.reporting.%');
			
			delete from `scheduler_task_config` where schedulable_class like 'org.openmrs.module.reporting.%';
		</sql>
	</diff>
	
	<diff>
		<version>0.5</version>
		<author>Dave Thomas</author>
		<date>April 11, 2011</date>
		<description>
				1.  drop the reporting_report_request_processor table.  report requests no long contain the processors -- these have been moved to ReportDesign
				2.  update reporting_report_processor table to have report_design_id column, add a constraint such that if not null, report_design_id column points to valid report_design
				3.  update reporting_report_processor table to have processor_mode column
				4.  all previous processors that we know about have been automatic.  So, let's set report processors to automatic.
		</description>
		<sql>
				DROP table `reporting_report_request_processor`;
				ALTER table `reporting_report_processor` ADD COLUMN report_design_id int(11) default NULL,
				ADD CONSTRAINT `reporting_report_processor_report_design` FOREIGN KEY (`report_design_id`) REFERENCES `reporting_report_design` (`id`);
				ALTER table `reporting_report_processor` ADD COLUMN processor_mode varchar(255) default NULL;
				UPDATE `reporting_report_processor` set processor_mode = 'AUTOMATIC';
		</sql>
	</diff>
	
	<diff>
		<version>0.6</version>
		<author>Michael Seaton</author>
		<date>October 2, 2012</date>
		<description>Add processAutomatically boolean to ReportRequest</description>
		<sql>
				ALTER table `reporting_report_request` ADD COLUMN process_automatically tinyint(1) NOT NULL default '0';
		</sql>
	</diff>
	
	<diff>
		<version>0.7</version>
		<author>Michael Seaton</author>
		<date>October 3, 2012</date>
		<description>Add processAutomatically boolean to ReportRequest</description>
		<sql>
			update 	reporting_report_request 
			set 	renderer_type = 'org.openmrs.module.reporting.web.renderers.DefaultWebRenderer' 
			where 	renderer_type = 'org.openmrs.module.reporting.web.renderers.IndicatorReportWebRenderer';
		</sql>
	</diff>
	
	<diff>
		<version>0.87</version>
		<author>Wyclif Luyima</author>
		<date>January 22, 2013</date>
		<description>
			Changing reporting_report_design to reference ReportDefinitions 
			by uuid rather than by id to serialized object 
		</description>
		<sql>
			ALTER table `reporting_report_design` ADD COLUMN report_definition_uuid char(38) NOT NULL;
			
			UPDATE reporting_report_design rd
			LEFT JOIN serialized_object so ON rd.report_definition_id = so.serialized_object_id
			SET rd.report_definition_uuid = so.uuid;
			
			ALTER table `reporting_report_design` ADD CONSTRAINT `report_definition_uuid for reporting_report_design` FOREIGN KEY (`report_definition_uuid`) REFERENCES `serialized_object` (`uuid`),
			DROP FOREIGN KEY `report_definition_id for reporting_report_design`,
			DROP COLUMN report_definition_id;
		</sql>
	</diff>
	
	<diff>
		<version>0.871</version>
		<author>Wyclif Luyima</author>
		<date>March 22, 2013</date>
		<description>
			Changing datatype of reporting_report_design.report_definition_uuid column to char(38)
		</description>
		<sql>
			ALTER table `reporting_report_design` MODIFY COLUMN report_definition_uuid char(38) NOT NULL;
		</sql>
	</diff>
	
</sqldiff>
